const assert = require('assert')

/* eslint-disable no-undef */
Feature('Liking Restaurants')
Before(({ I }) => {
  I.amOnPage('/#/favorite')
})
Scenario('showing empty liked restaurants', ({ I }) => {
  I.seeElement('#restaurants')
  I.see('', '#restaurants')
})
Scenario('liking one restaurant', async ({ I }) => {
  I.see('', '#restaurants')
  I.amOnPage('/')
  I.wait(3)
  I.seeElement('h3 a')
  const firstRestaurant = locate('h3 a').first()
  const firstRestaurantTitle = await I.grabTextFrom(firstRestaurant)
  I.click('h3 a')
  I.wait(3)
  I.seeElement('#likeButton')
  I.click('#likeButton')
  I.amOnPage('/#/favorite')
  I.wait(3)
  I.seeElement('.restaurant-item')
  const likedRestaurantTitle = await I.grabTextFrom('h3 a')
  assert.strictEqual(firstRestaurantTitle, likedRestaurantTitle)
})
Scenario('unliking one restaurant', async ({ I }) => {
  I.see('', '#restaurants')
  I.amOnPage('/')
  I.wait(3)
  I.seeElement('h3 a')
  const firstRestaurant = locate('h3 a').first()
  const firstRestaurantName = await I.grabTextFrom(firstRestaurant)
  I.click('h3 a')
  I.wait(3)
  I.seeElement('#likeButton')
  I.click('#likeButton')
  I.amOnPage('/#/favorite')
  I.wait(3)
  I.seeElement('.restaurant-item')
  const likedRestaurantName = await I.grabTextFrom('h3 a')
  assert.strictEqual(firstRestaurantName, likedRestaurantName)
  I.click(locate('h3 a').first())
  I.wait(3)
  I.seeElement('#likeButton')
  I.click('#likeButton')
  I.amOnPage('/#/favorite')
  I.wait(3)
  I.dontSeeElement('.restaurant-item')
})
